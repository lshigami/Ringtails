{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a server for a TOEIC Writing practice application with AI feedback. Supports structured tests and various question types including picture description.",
        "title": "TOEIC Writing Practice API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.1"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/attempts": {
            "get": {
                "description": "Retrieve submitted attempts. Use 'user_id' and/or 'test_id' query params to filter.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attempts"
                ],
                "summary": "Get all attempts (history), optionally filtered by user_id and/or test_id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter attempts by User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter attempts by Test ID (shows attempts for questions within this test)",
                        "name": "test_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AttemptResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user_id or test_id format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "User submits their answer to a question, it gets evaluated by AI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attempts"
                ],
                "summary": "Submit a new attempt for a question",
                "parameters": [
                    {
                        "description": "Attempt data",
                        "name": "attempt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SubmitAttemptRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.AttemptResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or question not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error or AI service error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/attempts/{id}": {
            "get": {
                "description": "Retrieve details of a single submitted attempt",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attempts"
                ],
                "summary": "Get a specific attempt by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attempt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AttemptResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Attempt not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/done/{user_id}": {
            "get": {
                "description": "Retrieves all tests that a user has attempted",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tests"
                ],
                "summary": "Get all completed tests for a specific user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TestResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid User ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/questions": {
            "get": {
                "description": "Retrieve TOEIC writing questions. Use 'test_id' query param to filter by test.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Get all questions, optionally filtered by test ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by Test ID",
                        "name": "test_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.QuestionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid test_id format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new TOEIC writing question. If TestID is provided, it associates with that test.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Create a new question (standalone or for a test)",
                "parameters": [
                    {
                        "description": "Question data",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.QuestionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or invalid TestID",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/questions/{id}": {
            "get": {
                "description": "Retrieve a specific TOEIC writing question",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Get a question by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.QuestionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify an existing TOEIC writing question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Update an existing question",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated question data",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.QuestionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or ID",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a question from the system",
                "tags": [
                    "questions"
                ],
                "summary": "Delete a question",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/result/{test_id}/attempt/{attempt_id}": {
            "get": {
                "description": "Returns detailed information about a specific test attempt including all questions and answers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "result"
                ],
                "summary": "Get details of a specific test attempt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "test_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Attempt ID",
                        "name": "attempt_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TestAttemptDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test or attempt not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/result/{test_id}/attempts": {
            "get": {
                "description": "Returns a list of all attempts for a specific test with basic information like date, user, score",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "result"
                ],
                "summary": "Get list of attempts for a test",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "test_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TestAttemptsListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Test ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/result/{test_id}/{user_id}": {
            "get": {
                "description": "Retrieves all attempts made by a user for a specific test",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tests"
                ],
                "summary": "Get all attempts for a specific test by a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "test_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TestAttemptsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Test ID or User ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tests": {
            "get": {
                "description": "Retrieve all TOEIC writing tests. Use 'with_questions=true' query param to include questions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tests"
                ],
                "summary": "Get all tests",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include questions in the response",
                        "name": "with_questions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TestResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new TOEIC writing test, optionally with its questions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tests"
                ],
                "summary": "Create a new test",
                "parameters": [
                    {
                        "description": "Test data including optional questions",
                        "name": "test",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateTestRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.TestResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tests/{id}": {
            "get": {
                "description": "Retrieve a specific TOEIC writing test and all its associated questions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tests"
                ],
                "summary": "Get a test by ID with its questions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TestResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the title or description of an existing test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tests"
                ],
                "summary": "Update a test's metadata",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Test metadata to update (only Title and Description are used)",
                        "name": "test_metadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateTestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TestResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or ID",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a test and its associated questions",
                "tags": [
                    "tests"
                ],
                "summary": "Delete a test",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tests/{id}/history": {
            "get": {
                "description": "Retrieves all questions of a test and the user's attempts for each question.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tests"
                ],
                "summary": "Get user's attempt history for a specific test",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID to filter history for. If not provided, might show for a default/anonymous user or be restricted.",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TestAttemptHistoryResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid Test ID or User ID format",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tests/{id}/questions": {
            "post": {
                "description": "Creates a new question and associates it with the specified test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tests"
                ],
                "summary": "Add a question to an existing test",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID to add question to",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question data (TestID in body will be ignored, OrderInTest should be unique for the test)",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.QuestionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or Test ID",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tests/{id}/submit": {
            "post": {
                "description": "User submits a collection of answers for all (or some) questions in a test.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tests"
                ],
                "summary": "Submit all answers for a specific test",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID to submit answers for",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User ID and list of answers (question_id, user_answer)",
                        "name": "submission_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SubmitFullTestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully submitted with details of created attempts",
                        "schema": {
                            "$ref": "#/definitions/dto.SubmitFullTestResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body, Test ID, or invalid question IDs within submission",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during submission processing",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AnswerForTestSubmission": {
            "type": "object",
            "required": [
                "question_id",
                "user_answer"
            ],
            "properties": {
                "question_id": {
                    "type": "integer"
                },
                "user_answer": {
                    "type": "string"
                }
            }
        },
        "dto.AttemptInfoDTO": {
            "type": "object",
            "properties": {
                "ai_feedback": {
                    "description": "Có thể là omitempty nếu không muốn load ngay",
                    "type": "string"
                },
                "attempt_id": {
                    "type": "integer"
                },
                "submitted_at": {
                    "type": "string"
                },
                "user_answer": {
                    "type": "string"
                }
            }
        },
        "dto.AttemptResponse": {
            "type": "object",
            "properties": {
                "ai_feedback": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "question": {
                    "$ref": "#/definitions/dto.QuestionResponse"
                },
                "question_id": {
                    "type": "integer"
                },
                "submitted_at": {
                    "type": "string"
                },
                "user_answer": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateQuestionRequest": {
            "type": "object",
            "required": [
                "prompt",
                "title",
                "type"
            ],
            "properties": {
                "given_word1": {
                    "type": "string"
                },
                "given_word2": {
                    "type": "string"
                },
                "image_url": {
                    "description": "For type=\"sentence_picture\"",
                    "type": "string"
                },
                "order_in_test": {
                    "description": "1-8, relevant if TestID is provided or part of CreateTestWithQuestionsRequest",
                    "type": "integer"
                },
                "prompt": {
                    "description": "Main text for email/essay, or general instruction for picture",
                    "type": "string"
                },
                "test_id": {
                    "description": "Optional: associate with an existing test",
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "sentence_picture",
                        "email_response",
                        "opinion_essay"
                    ]
                }
            }
        },
        "dto.CreateTestRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "questions": {
                    "description": "Optional: create questions along with the test",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.QuestionForTestRequest"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "dto.QuestionAttemptHistoryDTO": {
            "type": "object",
            "properties": {
                "attempts": {
                    "description": "Chỉ chứa thông tin cần thiết của attempt",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AttemptInfoDTO"
                    }
                },
                "given_word1": {
                    "type": "string"
                },
                "given_word2": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "order_in_test": {
                    "type": "integer"
                },
                "prompt": {
                    "description": "For email/essay",
                    "type": "string"
                },
                "question_id": {
                    "type": "integer"
                },
                "question_title": {
                    "type": "string"
                },
                "question_type": {
                    "type": "string"
                }
            }
        },
        "dto.QuestionForTestRequest": {
            "type": "object",
            "required": [
                "order_in_test",
                "prompt",
                "title",
                "type"
            ],
            "properties": {
                "given_word1": {
                    "description": "Required if type=\"sentence_picture\"",
                    "type": "string"
                },
                "given_word2": {
                    "description": "Required if type=\"sentence_picture\"",
                    "type": "string"
                },
                "image_url": {
                    "description": "Required if type=\"sentence_picture\"",
                    "type": "string"
                },
                "order_in_test": {
                    "type": "integer",
                    "maximum": 8,
                    "minimum": 1
                },
                "prompt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "sentence_picture",
                        "email_response",
                        "opinion_essay"
                    ]
                }
            }
        },
        "dto.QuestionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "given_word1": {
                    "type": "string"
                },
                "given_word2": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "order_in_test": {
                    "type": "integer"
                },
                "prompt": {
                    "type": "string"
                },
                "test_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.SubmitAttemptRequest": {
            "type": "object",
            "required": [
                "question_id",
                "user_answer"
            ],
            "properties": {
                "question_id": {
                    "type": "integer"
                },
                "user_answer": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.SubmitFullTestRequest": {
            "type": "object",
            "required": [
                "answers"
            ],
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AnswerForTestSubmission"
                    }
                },
                "user_id": {
                    "description": "Optional User ID",
                    "type": "integer"
                }
            }
        },
        "dto.SubmitFullTestResponse": {
            "type": "object",
            "properties": {
                "attempts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AttemptResponse"
                    }
                },
                "errors": {
                    "description": "To report any partial failures",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "submitted_count": {
                    "type": "integer"
                },
                "test_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TestAttemptDetailResponse": {
            "type": "object",
            "properties": {
                "attempt_id": {
                    "type": "integer"
                },
                "questions_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.QuestionAttemptHistoryDTO"
                    }
                },
                "score": {
                    "type": "integer"
                },
                "submitted_at": {
                    "type": "string"
                },
                "test_id": {
                    "type": "integer"
                },
                "test_title": {
                    "type": "string"
                },
                "total_questions": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.TestAttemptHistoryResponseDTO": {
            "type": "object",
            "properties": {
                "questions_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.QuestionAttemptHistoryDTO"
                    }
                },
                "test_id": {
                    "type": "integer"
                },
                "test_title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TestAttemptsListItem": {
            "type": "object",
            "properties": {
                "attempt_id": {
                    "type": "integer"
                },
                "completed_questions": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                },
                "submitted_at": {
                    "type": "string"
                },
                "total_questions": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.TestAttemptsListResponse": {
            "type": "object",
            "properties": {
                "attempts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TestAttemptsListItem"
                    }
                },
                "test_id": {
                    "type": "integer"
                },
                "test_title": {
                    "type": "string"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "dto.TestAttemptsResponse": {
            "type": "object",
            "properties": {
                "attempts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AttemptResponse"
                    }
                },
                "submitted_at": {
                    "type": "string"
                },
                "test_id": {
                    "type": "integer"
                },
                "test_title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TestResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "questions": {
                    "description": "Eager loaded questions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.QuestionResponse"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}