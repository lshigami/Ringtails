{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API for TOEIC Writing practice with structured tests and AI feedback. Designed for full test submissions and history.",
        "title": "TOEIC Writing Practice API (Revised V1)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/admin/tests": {
            "post": {
                "description": "Admin creates a new test with exactly 8 questions. All questions must be provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Tests"
                ],
                "summary": "(Admin) Create a new complete test",
                "parameters": [
                    {
                        "description": "Test creation data including all questions (must be 8 questions)",
                        "name": "test_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.TestCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Test created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.TestResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid input data (e.g., not 8 questions, missing fields)",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/test-attempts/{attempt_id}": {
            "get": {
                "description": "Retrieve full details of a single test attempt, including all answers, scores, and feedback.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Tests \u0026 Attempts"
                ],
                "summary": "(User) Get details of a specific test attempt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test Attempt ID",
                        "name": "attempt_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.TestAttemptDetailDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid Test Attempt ID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test Attempt not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tests": {
            "get": {
                "description": "Get a list of tests. If 'user_id' query param is provided, includes attempt status for that user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Tests \u0026 Attempts"
                ],
                "summary": "(User) List all available tests",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Optional User ID to check attempt status against",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.TestSummaryDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid User ID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tests/{test_id}": {
            "get": {
                "description": "Get full details of a test, including all its questions, for a user to start an attempt.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Tests \u0026 Attempts"
                ],
                "summary": "(User) Get details of a specific test",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "test_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.TestResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid Test ID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tests/{test_id}/attempts": {
            "post": {
                "description": "User submits answers for questions in a specific test. AI scoring happens in the background.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Tests \u0026 Attempts"
                ],
                "summary": "(User) Submit answers for an entire test",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the Test being attempted",
                        "name": "test_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User ID (optional for now) and list of answers",
                        "name": "submission_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.TestAttemptSubmitDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attempt submitted and processing started. Details might be partial until scoring completes.",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.TestAttemptDetailDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid input (e.g., bad Test ID, invalid answers format)",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Test not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error processing submission",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tests/{test_id}/my-attempts": {
            "get": {
                "description": "Retrieve a list of summary information for all attempts a user made on a test.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User - Tests \u0026 Attempts"
                ],
                "summary": "(User) Get all attempts by a user for a specific test",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Test ID",
                        "name": "test_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID to filter attempts. (Temporary - will be from auth token)",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.TestAttemptSummaryDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format for Test ID or User ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_lshigami_Ringtails_internal_dto.AnswerResponseDTO": {
            "type": "object",
            "properties": {
                "ai_feedback": {
                    "type": "string"
                },
                "ai_score": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "question": {
                    "description": "Contains full question details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.QuestionResponseDTO"
                        }
                    ]
                },
                "question_id": {
                    "type": "integer"
                },
                "user_answer": {
                    "type": "string"
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.QuestionCreateDTO": {
            "type": "object",
            "required": [
                "max_score",
                "order_in_test",
                "prompt",
                "title",
                "type"
            ],
            "properties": {
                "given_word1": {
                    "type": "string"
                },
                "given_word2": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "max_score": {
                    "type": "number"
                },
                "order_in_test": {
                    "type": "integer",
                    "maximum": 8,
                    "minimum": 1
                },
                "prompt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "sentence_picture",
                        "email_response",
                        "opinion_essay"
                    ]
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.QuestionResponseDTO": {
            "type": "object",
            "properties": {
                "given_word1": {
                    "type": "string"
                },
                "given_word2": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "max_score": {
                    "type": "number"
                },
                "order_in_test": {
                    "type": "integer"
                },
                "prompt": {
                    "type": "string"
                },
                "test_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.TestAttemptDetailDTO": {
            "type": "object",
            "properties": {
                "answers": {
                    "description": "List of answers with their details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.AnswerResponseDTO"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "scaled_score": {
                    "description": "Điểm đã quy đổi",
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "submitted_at": {
                    "type": "string"
                },
                "test_id": {
                    "type": "integer"
                },
                "test_title": {
                    "type": "string"
                },
                "total_raw_score": {
                    "description": "Điểm thô",
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.TestAttemptSubmitDTO": {
            "type": "object",
            "required": [
                "answers"
            ],
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.UserAnswerDTO"
                    }
                },
                "user_id": {
                    "description": "Temporary, for non-auth user identification",
                    "type": "integer"
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.TestAttemptSummaryDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "scaled_score": {
                    "description": "Điểm đã quy đổi",
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "submitted_at": {
                    "type": "string"
                },
                "test_id": {
                    "type": "integer"
                },
                "total_raw_score": {
                    "description": "Điểm thô",
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.TestCreateDTO": {
            "type": "object",
            "required": [
                "questions",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "maxItems": 8,
                    "minItems": 8,
                    "items": {
                        "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.QuestionCreateDTO"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.TestResponseDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_lshigami_Ringtails_internal_dto.QuestionResponseDTO"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.TestSummaryDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "has_attempted_by_user": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "last_attempt_raw_score": {
                    "description": "Đổi tên TotalScore thành RawScore",
                    "type": "number"
                },
                "last_attempt_scaled_score": {
                    "description": "Thêm điểm quy đổi",
                    "type": "number"
                },
                "last_attempt_status": {
                    "type": "string"
                },
                "question_count": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_lshigami_Ringtails_internal_dto.UserAnswerDTO": {
            "type": "object",
            "required": [
                "question_id",
                "user_answer"
            ],
            "properties": {
                "question_id": {
                    "type": "integer"
                },
                "user_answer": {
                    "type": "string"
                }
            }
        }
    }
}