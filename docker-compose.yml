services:
  app:
    build: .
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SERVER_PORT: 8080
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      DATABASE_NAME: toeic
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    networks:
      - app-network

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_DB: toeic
    volumes:
      - ringtails_postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d toeic"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  ringtails_postgres_data:
    name: ringtails_postgres_data

networks:
  app-network:
    driver: bridge
